
Introducción a numpy 
Conjunto de funciones provenientes de C++,C, FORTRAN 

Generación de funiciones 
Uso de librería 

Funciones en base a arreglos homogeneos y arbitrarios 

arange genera un arreglo del o al n arrange(n)

Nuevos tipos de variables 

numpy.narray

Arreglos con contenidos en forma de lista 

Método en el que se puede especificar el tipo de variables que tiene dentro 

Arreglos ordenados por la magnitud aritmetica del tipo utilizado ej: False (0), True (1)

Flotar el punto mover el punto para generar elementos no enteros 

importancia de los arrays álgebra de vectores, señales

para generar un arreglo númerico -> 

a = arange(n)
a.shape(n,0) función para que indique la forma del arreglo 

arange(n)reshape(n,n) genera una matriz de nxn

una lista se transforma por medio de arra{list[x,y,z,z]}

indice dado por renglones

para encontrar un número dentro de una matriz 

N = definida matricialmente

N[2,1] elemento Aij de la matriz N[i,j]

para devolver todo un renglon o toda una columna 

N[n,:],N[:,n]

Uso para manejo tensorial

a.dim catidad de arreglos que se necesita para generarlo

a.size número de elementos 

a.itemsize número de bits de los elementos

a.resize cambia la forma

a.T transponer 

álgebra lineal
posible creación de matrices unitarias

i2 = eye(2)
savetxt() permite guardar los resultados en un txt 

numpy utiliza la paqueterá para tener una mlista de matrices 
linalg 

matrix([1,2],[2,2])

atributos y métodos que se puede hacer con ellos y que puedo cambiar de ellos  

caracteristicas invariantes traza y determinante 

manipulación de matrices 
numpy.linalg 
inv(B)


definiendo funciones y librerias 

def factorial(n):
 if n = 0;
	return 1
 else 
	retur n * factorial(n-1)
def sen(x,n):
	i = 0
	suma = 0
	while i < n:
	        aux = 2*i +1
                suma = ((-1)**i/factorial(aux))*x**aux + suma
	        i += 1
	return suma 

	
	
	
	      


 
